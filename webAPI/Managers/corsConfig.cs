//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebService.Managers
{


    /// <summary>
    /// The CORSConfig Configuration Section.
    /// </summary>
    public partial class CORSConfig : global::System.Configuration.ConfigurationSection
    {

        #region Singleton Instance
        /// <summary>
        /// The XML name of the CORSConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string CORSConfigSectionName = "corsConfig";

        /// <summary>
        /// The XML path of the CORSConfig Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string CORSConfigSectionPath = "corsConfig";

        /// <summary>
        /// Gets the CORSConfig instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public static global::WebService.Managers.CORSConfig Instance
        {
            get
            {
                return ((global::WebService.Managers.CORSConfig)(global::System.Configuration.ConfigurationManager.GetSection(global::WebService.Managers.CORSConfig.CORSConfigSectionPath)));
            }
        }
        #endregion

        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string XmlnsPropertyName = "xmlns";

        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.CORSConfig.XmlnsPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::WebService.Managers.CORSConfig.XmlnsPropertyName]));
            }
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region project Property
        /// <summary>
        /// The XML name of the <see cref="project"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string projectPropertyName = "project";

        /// <summary>
        /// Gets or sets the project.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The project.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.CORSConfig.projectPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual global::WebService.Managers.project_collection project
        {
            get
            {
                return ((global::WebService.Managers.project_collection)(base[global::WebService.Managers.CORSConfig.projectPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.CORSConfig.projectPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace WebService.Managers
{


    /// <summary>
    /// A collection of token_element instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::WebService.Managers.token_element), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::WebService.Managers.project_collection.token_elementPropertyName)]
    public partial class project_collection : global::System.Configuration.ConfigurationElementCollection
    {

        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::WebService.Managers.token_element"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string token_elementPropertyName = "project";
        #endregion

        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override string ElementName
        {
            get
            {
                return global::WebService.Managers.project_collection.token_elementPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::WebService.Managers.project_collection.token_elementPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::WebService.Managers.token_element)(element)).name;
        }

        /// <summary>
        /// Creates a new <see cref="global::WebService.Managers.token_element"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::WebService.Managers.token_element"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::WebService.Managers.token_element();
        }
        #endregion

        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.token_element"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::WebService.Managers.token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.token_element this[int index]
        {
            get
            {
                return ((global::WebService.Managers.token_element)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.token_element"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::WebService.Managers.token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.token_element this[object name]
        {
            get
            {
                return ((global::WebService.Managers.token_element)(base.BaseGet(name)));
            }
        }
        #endregion

        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::WebService.Managers.token_element"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="project">The <see cref="global::WebService.Managers.token_element"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public void Add(global::WebService.Managers.token_element project)
        {
            base.BaseAdd(project);
        }
        #endregion

        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::WebService.Managers.token_element"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="project">The <see cref="global::WebService.Managers.token_element"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public void Remove(global::WebService.Managers.token_element project)
        {
            base.BaseRemove(this.GetElementKey(project));
        }
        #endregion

        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.token_element"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::WebService.Managers.token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.token_element GetItemAt(int index)
        {
            return ((global::WebService.Managers.token_element)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.token_element"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::WebService.Managers.token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.token_element GetItemByKey(string name)
        {
            return ((global::WebService.Managers.token_element)(base.BaseGet(((object)(name)))));
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region id Property
        /// <summary>
        /// The XML name of the <see cref="id"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string idPropertyName = "id";

        /// <summary>
        /// Gets or sets the id.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The id.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.project_collection.idPropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false)]
        public virtual string id
        {
            get
            {
                return ((string)(base[global::WebService.Managers.project_collection.idPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.project_collection.idPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace WebService.Managers
{


    /// <summary>
    /// The token_element Configuration Element.
    /// </summary>
    public partial class token_element : global::System.Configuration.ConfigurationElement
    {

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region name Property
        /// <summary>
        /// The XML name of the <see cref="name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string namePropertyName = "name";

        /// <summary>
        /// Gets or sets the name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.token_element.namePropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false)]
        public virtual string name
        {
            get
            {
                return ((string)(base[global::WebService.Managers.token_element.namePropertyName]));
            }
            set
            {
                base[global::WebService.Managers.token_element.namePropertyName] = value;
            }
        }
        #endregion

        #region secret_key Property
        /// <summary>
        /// The XML name of the <see cref="secret_key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string secret_keyPropertyName = "secret_key";

        /// <summary>
        /// Gets or sets the secret_key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The secret_key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.token_element.secret_keyPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual string secret_key
        {
            get
            {
                return ((string)(base[global::WebService.Managers.token_element.secret_keyPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.token_element.secret_keyPropertyName] = value;
            }
        }
        #endregion

        #region expire_minutes Property
        /// <summary>
        /// The XML name of the <see cref="expire_minutes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string expire_minutesPropertyName = "expire_minutes";

        /// <summary>
        /// Gets or sets the expire_minutes.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The expire_minutes.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.token_element.expire_minutesPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual int expire_minutes
        {
            get
            {
                return ((int)(base[global::WebService.Managers.token_element.expire_minutesPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.token_element.expire_minutesPropertyName] = value;
            }
        }
        #endregion

        #region audience_token Property
        /// <summary>
        /// The XML name of the <see cref="audience_token"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string audience_tokenPropertyName = "audience";

        /// <summary>
        /// Gets or sets the audience_token.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The audience_token.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.token_element.audience_tokenPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual global::WebService.Managers.audience_token_collection audience_token
        {
            get
            {
                return ((global::WebService.Managers.audience_token_collection)(base[global::WebService.Managers.token_element.audience_tokenPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.token_element.audience_tokenPropertyName] = value;
            }
        }
        #endregion

        #region issuer_token Property
        /// <summary>
        /// The XML name of the <see cref="issuer_token"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string issuer_tokenPropertyName = "issuer";

        /// <summary>
        /// Gets or sets the issuer_token.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The issuer_token.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.token_element.issuer_tokenPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual global::WebService.Managers.issuer_token_collection issuer_token
        {
            get
            {
                return ((global::WebService.Managers.issuer_token_collection)(base[global::WebService.Managers.token_element.issuer_tokenPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.token_element.issuer_tokenPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace WebService.Managers
{


    /// <summary>
    /// A collection of issuer_token_element instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::WebService.Managers.issuer_token_element), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::WebService.Managers.issuer_token_collection.issuer_token_elementPropertyName)]
    public partial class issuer_token_collection : global::System.Configuration.ConfigurationElementCollection
    {

        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::WebService.Managers.issuer_token_element"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string issuer_token_elementPropertyName = "issuer_token";
        #endregion

        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override string ElementName
        {
            get
            {
                return global::WebService.Managers.issuer_token_collection.issuer_token_elementPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::WebService.Managers.issuer_token_collection.issuer_token_elementPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::WebService.Managers.issuer_token_element)(element)).key;
        }

        /// <summary>
        /// Creates a new <see cref="global::WebService.Managers.issuer_token_element"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::WebService.Managers.issuer_token_element"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::WebService.Managers.issuer_token_element();
        }
        #endregion

        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.issuer_token_element"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::WebService.Managers.issuer_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.issuer_token_element this[int index]
        {
            get
            {
                return ((global::WebService.Managers.issuer_token_element)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.issuer_token_element"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::WebService.Managers.issuer_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.issuer_token_element this[object key]
        {
            get
            {
                return ((global::WebService.Managers.issuer_token_element)(base.BaseGet(key)));
            }
        }
        #endregion

        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::WebService.Managers.issuer_token_element"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="issuer_token">The <see cref="global::WebService.Managers.issuer_token_element"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public void Add(global::WebService.Managers.issuer_token_element issuer_token)
        {
            base.BaseAdd(issuer_token);
        }
        #endregion

        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::WebService.Managers.issuer_token_element"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="issuer_token">The <see cref="global::WebService.Managers.issuer_token_element"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public void Remove(global::WebService.Managers.issuer_token_element issuer_token)
        {
            base.BaseRemove(this.GetElementKey(issuer_token));
        }
        #endregion

        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.issuer_token_element"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::WebService.Managers.issuer_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.issuer_token_element GetItemAt(int index)
        {
            return ((global::WebService.Managers.issuer_token_element)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.issuer_token_element"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::WebService.Managers.issuer_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.issuer_token_element GetItemByKey(string key)
        {
            return ((global::WebService.Managers.issuer_token_element)(base.BaseGet(((object)(key)))));
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace WebService.Managers
{


    /// <summary>
    /// A collection of audience_token_element instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::WebService.Managers.audience_token_element), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::WebService.Managers.audience_token_collection.audience_token_elementPropertyName)]
    public partial class audience_token_collection : global::System.Configuration.ConfigurationElementCollection
    {

        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::WebService.Managers.audience_token_element"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string audience_token_elementPropertyName = "audience_token";
        #endregion

        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override string ElementName
        {
            get
            {
                return global::WebService.Managers.audience_token_collection.audience_token_elementPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::WebService.Managers.audience_token_collection.audience_token_elementPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::WebService.Managers.audience_token_element)(element)).key;
        }

        /// <summary>
        /// Creates a new <see cref="global::WebService.Managers.audience_token_element"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::WebService.Managers.audience_token_element"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::WebService.Managers.audience_token_element();
        }
        #endregion

        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.audience_token_element"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::WebService.Managers.audience_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.audience_token_element this[int index]
        {
            get
            {
                return ((global::WebService.Managers.audience_token_element)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.audience_token_element"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::WebService.Managers.audience_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.audience_token_element this[object key]
        {
            get
            {
                return ((global::WebService.Managers.audience_token_element)(base.BaseGet(key)));
            }
        }
        #endregion

        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::WebService.Managers.audience_token_element"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="audience_token">The <see cref="global::WebService.Managers.audience_token_element"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public void Add(global::WebService.Managers.audience_token_element audience_token)
        {
            base.BaseAdd(audience_token);
        }
        #endregion

        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::WebService.Managers.audience_token_element"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="audience_token">The <see cref="global::WebService.Managers.audience_token_element"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public void Remove(global::WebService.Managers.audience_token_element audience_token)
        {
            base.BaseRemove(this.GetElementKey(audience_token));
        }
        #endregion

        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.audience_token_element"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::WebService.Managers.audience_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.audience_token_element GetItemAt(int index)
        {
            return ((global::WebService.Managers.audience_token_element)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::WebService.Managers.audience_token_element"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::WebService.Managers.audience_token_element"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public global::WebService.Managers.audience_token_element GetItemByKey(string key)
        {
            return ((global::WebService.Managers.audience_token_element)(base.BaseGet(((object)(key)))));
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace WebService.Managers
{


    /// <summary>
    /// The issuer_token_element Configuration Element.
    /// </summary>
    public partial class issuer_token_element : global::System.Configuration.ConfigurationElement
    {

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region key Property
        /// <summary>
        /// The XML name of the <see cref="key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string keyPropertyName = "key";

        /// <summary>
        /// Gets or sets the key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.issuer_token_element.keyPropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false)]
        public virtual string key
        {
            get
            {
                return ((string)(base[global::WebService.Managers.issuer_token_element.keyPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.issuer_token_element.keyPropertyName] = value;
            }
        }
        #endregion

        #region value Property
        /// <summary>
        /// The XML name of the <see cref="value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string valuePropertyName = "value";

        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.issuer_token_element.valuePropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual string value
        {
            get
            {
                return ((string)(base[global::WebService.Managers.issuer_token_element.valuePropertyName]));
            }
            set
            {
                base[global::WebService.Managers.issuer_token_element.valuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace WebService.Managers
{


    /// <summary>
    /// The audience_token_element Configuration Element.
    /// </summary>
    public partial class audience_token_element : global::System.Configuration.ConfigurationElement
    {

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region key Property
        /// <summary>
        /// The XML name of the <see cref="key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string keyPropertyName = "key";

        /// <summary>
        /// Gets or sets the key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.audience_token_element.keyPropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false)]
        public virtual string key
        {
            get
            {
                return ((string)(base[global::WebService.Managers.audience_token_element.keyPropertyName]));
            }
            set
            {
                base[global::WebService.Managers.audience_token_element.keyPropertyName] = value;
            }
        }
        #endregion

        #region value Property
        /// <summary>
        /// The XML name of the <see cref="value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        internal const string valuePropertyName = "value";

        /// <summary>
        /// Gets or sets the value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.3.5")]
        [global::System.ComponentModel.DescriptionAttribute("The value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::WebService.Managers.audience_token_element.valuePropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual string value
        {
            get
            {
                return ((string)(base[global::WebService.Managers.audience_token_element.valuePropertyName]));
            }
            set
            {
                base[global::WebService.Managers.audience_token_element.valuePropertyName] = value;
            }
        }
        #endregion
    }
}